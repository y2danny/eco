<svg width="20" height="24" viewBox="0 0 20 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M18.4945 20.5917C19.1995 19.5117 19.4623 18.9598 20 17.7478C16.0332 16.2358 15.4 10.5599 19.319 8.38794C18.1241 6.87597 16.4394 6 14.8503 6C13.7033 6 12.9147 6.30001 12.2098 6.576C11.6124 6.804 11.0747 7.00798 10.4056 7.00798C9.68874 7.00798 9.05548 6.78 8.38638 6.54C7.65754 6.27601 6.89286 6 5.93701 6C4.15673 6 2.25698 7.09198 1.05021 8.96394C-0.646428 11.6039 -0.347721 16.5478 2.38841 20.7717C3.36816 22.2837 4.68245 23.9756 6.39104 23.9996C7.10793 24.0116 7.57391 23.7957 8.08768 23.5677C8.67314 23.3037 9.30639 23.0157 10.4176 23.0157C11.5287 23.0037 12.1501 23.3037 12.7355 23.5677C13.2373 23.7957 13.6914 24.0116 14.3963 23.9996C16.1288 23.9756 17.5148 22.1037 18.4945 20.5917Z" fill="#010F1C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M14.6006 0C14.7918 1.31997 14.2541 2.62796 13.5492 3.53994C12.7964 4.52393 11.4821 5.29189 10.2156 5.24389C9.98862 3.97192 10.5741 2.66394 11.291 1.78795C12.0915 0.827972 13.4416 0.0839983 14.6006 0Z" fill="#010F1C"/>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</svg>